# https://aka.ms/yaml
# https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/cross-platform-scripting
# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azdevops&tabs=yaml
# https://github.com/OpenImageIO/oiio/blob/master/INSTALL.md
  
jobs:
- job: 'Test'

  strategy:
    matrix:
#       linux-py36:
#         imageName: 'ubuntu-16.04'
#         python.version: '3.6'
#       mac-py36:
#         imageName: 'macos-10.13'
#         python.version: '3.6'
      windows-py36:
        imageName: 'vs2017-win2016'
        python.version: '3.6'
        python.location: 'C:/hostedtoolcache/windows/Python/3.6.4/x64'
        oiio.tag: 'Release-2.0.4'
        oiio.sha512: 'f6de620fba52e871f546e129c2d4b1792ff20504ab4219d8098be48cb552fd70a7064e8d487b9e1ad6473deda57f116e7f0185d7778ef3c5da7c077415288356'
    # maxParallel: 3

  pool:
    vmImage: $(imageName)


  steps:

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
      addToPath: true

#   - script:  |
#       choco install -y which
#       which python
#       python -c "import sys; print(sys.executable)"
#     condition: eq( variables['Agent.OS'], 'Windows_NT' )
#     displayName: Test Python executable path

  - bash: |
      git clone https://github.com/OpenImageIO/oiio.git
      cd oiio
      pwd
      git fetch --all --tags --prune
      git checkout tags/$(oiio.tag)
    displayName: Download oiio-$(oiio.tag)

#   # Linux
#   - bash: |
#       export IPADDR=$(ip addr | grep 'state UP' -A2 | tail -n1 | awk '{print $2}' | cut -f1  -d'/')
#       echo "##vso[task.setvariable variable=IP_ADDR]$IPADDR"
#     condition: eq( variables['Agent.OS'], 'Linux' )
#     displayName: Get IP on Linux

#   # macOS
#   - bash: |
#       export IPADDR=$(ifconfig | grep 'en0' -A3 | tail -n1 | awk '{print $2}')
#       echo "##vso[task.setvariable variable=IP_ADDR]$IPADDR"
#     condition: eq( variables['Agent.OS'], 'Darwin' )
#     displayName: Get IP on macOS

  # Windows
  - powershell: |
      cd C:/ 
      git clone https://github.com/Microsoft/vcpkg.git 
      cd vcpkg 
      .\bootstrap-vcpkg.bat 
      .\vcpkg integrate install
      .\vcpkg update
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: Install the Microsoft "vcpkg" manager
  - powershell: |
      cat C:/vcpkg/ports/openimageio/portfile.cmake
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: Show contents of oiio portfile.cmake
  - powershell: |
      choco install -y sed
      sed -i '/REF Release-/c\REF Release-2.0.4' C:/vcpkg/ports/openimageio/portfile.cmake
      sed -i '/SHA512/c\SHA512 f6de620fba52e871f546e129c2d4b1792ff20504ab4219d8098be48cb552fd70a7064e8d487b9e1ad6473deda57f116e7f0185d7778ef3c5da7c077415288356' C:/vcpkg/ports/openimageio/portfile.cmake
      sed -i '/HEAD_REF/c\HEAD_REF release' C:/vcpkg/ports/openimageio/portfile.cmake
      sed -i '/-DUSE_PYTHON/c\-DUSE_PYTHON=ON' C:/vcpkg/ports/openimageio/portfile.cmake
      sed -i '/-DBUILD_MISSING_PYBIND11/c\-DBUILD_MISSING_PYBIND11=ON' C:/vcpkg/ports/openimageio/portfile.cmake
      sed -i '/-DBUILD_MISSING_DEPS/c\-DBUILD_MISSING_DEPS=ON' C:/vcpkg/ports/openimageio/portfile.cmake
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: Edit contents of oiio portfile.cmake
  - powershell: |
      cat C:/vcpkg/ports/openimageio/portfile.cmake
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: Show contents of oiio portfile.cmake
  - powershell: |
      cd C:/vcpkg
      .\vcpkg list
      .\vcpkg install boost:x64-windows
      .\vcpkg install openexr:x64-windows
      .\vcpkg install tiff:x64-windows
      .\vcpkg install pybind11:x64-windows
      .\vcpkg list
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: Install prerequisites
  - powershell: |
      cd C:/vcpkg
      .\vcpkg list
      .\vcpkg install openimageio:x64-windows
      .\vcpkg list
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: Install oiio

#   # now we use the value, no matter where we got it
#   - script: |
#       echo The IP address is $(IP_ADDR)
      
#   # also test python
#   - script: |
#       python --version
  
