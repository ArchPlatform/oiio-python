# https://aka.ms/yaml
# https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/cross-platform-scripting
# https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azdevops&tabs=yaml
# https://github.com/OpenImageIO/oiio/blob/master/INSTALL.md

jobs:
- job: 'oiio'

  strategy:
    matrix:
      windows-py36:
        python.version_major: '3'
        python.version_minor: '6'
        python.version_patch: '4'
      windows-py37:
        python.version_major: '3'
        python.version_minor: '7'
        python.version_patch: '0'

  variables:
    python.version: '$(python.version_major).$(python.version_minor)'
    azure.vm_image: 'macOS-10.13'
    src.python: '$(Agent.BuildDirectory)/s/src/python'
    src.vcpkg: '$(Agent.BuildDirectory)/s/src/vcpkg'
    pypackage.version: '2.0.4+$(Build.BuildNumber)'
    pypackage.os_name: 'Microsoft :: MacOS'

  pool:
    vmImage: $(azure.vm_image)


  steps:

  # Select Python version to run on agent
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/tool/use-python-version?view=azdevops
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'
      addToPath: true

  # Make setup.py ready by substituting placeholders
  - bash: |
      cd $(src.python)
      sed -i "s/PACKAGE_VERSION/$(pypackage.version)/g" setup.py
      sed -i "s/PYTHON_VERSION/$(python.version)/g" setup.py
      sed -i "s/OS_NAME/$(pypackage.os_name)/g" setup.py
      cat setup.py
    displayName: Inject variable values into setup.py

  # Install vcpkg
  - bash: |
      brew install gcc6
      git clone https://github.com/Microsoft/vcpkg.git
      cd vcpkg
      ./bootstrap-vcpkg.sh
      ./vcpkg integrate install
    displayName: Install vcpkg
